//
// Created by pp on 10.01.19.
//

#ifndef THESIS_KNEARESTCLUSTERCLASSIFIER_H
#define THESIS_KNEARESTCLUSTERCLASSIFIER_H

#include "ClusterClassifier.hpp"

class KNearestClusterClassifier : public ClusterClassifier
{
public:
    KNearestClusterClassifier(int clusters)
            : ClusterClassifier(clusters)
    {
    }
    cv::Mat cluster(const cv::Mat& features) override;
    cv::Mat predict(const cv::Mat& features) override;
    void train(const cv::Mat& features, cv::Mat& clusters) override; // returns matrix with type CV_32S but maybe


private:
    cv::Ptr<cv::ml::KNearest> _classifier = cv::ml::KNearest::create();
    cv::Mat _featuresClustersLabels;
};

#endif //THESIS_KNEARESTCLUSTERCLASSIFIER_H

//
// Created by pp on 15.01.19.
//

#ifndef THESIS_KMEANSWRAPPER_HPP
#define THESIS_KMEANSWRAPPER_HPP

#include <opencv4/opencv2/features2d/features2d.hpp>
#include "ClusterClassifier.hpp"

class KMeansWrapper : public ClusterClassifier
{
public:
    explicit KMeansWrapper(int clusters)
            : ClusterClassifier(clusters)
    {}

    cv::Mat cluster(const cv::Mat& features) override;
    void train(const cv::Mat& features, cv::Mat& clusters) override;
    cv::Mat predict(const cv::Mat&) override;
    void load(const std::string& filepath) override;
    void save(const std::string& filepath) override;
    bool isTrained();

private:
    cv::Mat _featuresClustersLabels;
    cv::Mat _centers;
    cv::Ptr<cv::DescriptorMatcher> _matcher = cv::DescriptorMatcher::create(cv::DescriptorMatcher::BRUTEFORCE_SL2);
};

#endif //THESIS_KMEANSWRAPPER_HPP

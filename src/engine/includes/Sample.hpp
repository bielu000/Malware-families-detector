//
// Created by pp on 10.01.19.
//

#ifndef THESIS_SAMPLE_HPP
#define THESIS_SAMPLE_HPP

#include <string>
#include <vector>
#include <memory>

#include "FeaturesExtractor.hpp"


class Sample
{
public:
    Sample(const std::string& filename, const std::string& path, int label = 0)
        : _filename(filename), _directoryPath(path), _label(label)
    {
        std::stringstream ss;
        ss << _directoryPath << "/" << _filename;

        _path = ss.str();
    }

    void computeFeatures(std::shared_ptr<FeaturesExtractor>& extractor);
    cv::Mat& getDescriptors();
    int countDescriptors() const;
    int getLabelId();
    std::string getName() const;
    std::string getPath() const;

private:
    std::string _filename;
    std::string _directoryPath;
    std::string _path;
    int _label;
    cv::Mat _descriptors;
};

#endif //THESIS_SAMPLE_HPP

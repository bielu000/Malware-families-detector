//
// Created by pp on 26.01.19.
//

#ifndef THESIS_FILECONFIGURATIONPROVIDER_HPP
#define THESIS_FILECONFIGURATIONPROVIDER_HPP

#include "ConfigProvider.hpp"
#include <experimental/filesystem>
#include <memory>

namespace filesystem = std::experimental::filesystem;

class FileConfigProvider : public ConfigProvider
{
public:
    FileConfigProvider(const std::string& fname, const std::string& dir);
    void addConfiguration(const Config& cfg) override;
    void save() override;
    const std::vector<Config> getAllConfigurations() override;
    const Config getConfiguration(const std::string& id) override;

    std::string generatePath(const std::string& fname) override;
private:
    void init();

private:
    std::vector<Config> _configs;
    bool _isInitialized = false;

    std::string _cfgFilename;
    std::string _cfgFilepath;
    std::string _rootDir;
};

#endif //THESIS_FILECONFIGURATIONPROVIDER_HPP

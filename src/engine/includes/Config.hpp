//
// Created by pp on 10.01.19.
//

#ifndef THESIS_CONFIGURATION_HPP
#define THESIS_CONFIGURATION_HPP

#include <string>
#include "../../utility/JsonSerializer.hpp"
#include "../../utility/JsonDeserializer.hpp"

struct Config {
    std::string id;
    std::string clusterModel;
    std::string predictionModel;
    std::string scaler;
};

class ConfigSerializer : public JsonSerializer<Config> {
public:
    std::string serialize(const Config& config) override
    {
        std::stringstream stream;

        stream
            << obj_start()
            << property("id", config.id) << next()
            << property("clusterModel", config.clusterModel) << next()
            << property("predictionModel", config.predictionModel) << next()
            << property("scaler", config.scaler)
            << obj_end();

        return stream.str();
    }
};

class ConfigDeserializer : public JsonDeserializer<Config> {
public:
    explicit ConfigDeserializer(const std::stringstream& stream)
        : JsonDeserializer(stream)
    {}

    Config deserializeObject() override
    {
        Config config;

        config.id               = property<std::string>("id");
        config.clusterModel     = property<std::string>("clusterModel");
        config.predictionModel  = property<std::string>("predictionModel");
        config.scaler           = property<std::string>("scaler");

        return config;
    }
};

#endif //THESIS_CONFIGURATION_HPP

//
// Created by pp on 20.01.19.
//

#include <QtWidgets/QApplication>
#include "../include/qtappcontroller.hpp"
#include "../include/mainwindow.hpp"
#include <functional>

int QtAppController::run(int argc, char **argv)
{
    QApplication a(argc, argv);
    MainWindow w(_supervisor);
    w.centerAndResize();

    //predictions
    _bus->onPredictionStarted.connect([&w](PredictionStarted ev)->void { emit w.predictionStarted(ev); });
    _bus->onPredictionCompleted.connect([&w](PredictionCompleted ev)->void { emit w.predictionCompleted(ev); });

    //training
    _bus->onTrainingStarted.connect([&w](TrainingStarted ev)->void { emit w.trainingStarted(ev); });
    _bus->onTrainingCompleted.connect([&w](TrainingCompleted ev)->void { emit w.trainingCompleted(ev); });

    //test
    _bus->onTestStarted.connect([&w](TestStarted ev)->void { emit w.testStarted(ev); });
    _bus->onTestCompleted.connect([&w](TestCompleted ev)->void { emit w.testCompleted(ev); });

    //stages
    _bus->onStageChanged.connect([&w](StageChanged ev)->void { emit w.stateChanged(ev); });

    //errors
    _bus->onErrorOccurred.connect([&w](ErrorOccurred ev)->void { emit w.errorOccured(ev); });

    w.show();

    return a.exec();
}

void QtAppController::train() {
    const std::string trainLabelsSource = "../../dataset/ml2/train/trainLabels-90.csv";
    const std::string trainDataRootSource = "../../dataset/ml2/train";

    const std::string testLabelsSource = "../../dataset/ml2/test/testLabels-45.csv";
    const std::string testDataRootSource = "../../dataset/ml2/test";

    auto trainDataset = std::make_unique<Dataset>(trainLabelsSource, trainDataRootSource);
//
}

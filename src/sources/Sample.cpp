//
// Created by pp on 10.01.19.
//

#include <memory>
#include <opencv4/opencv2/opencv.hpp>
#include <opencv4/opencv2/xfeatures2d.hpp>

#include "../includes/Sample.hpp"
#include "../includes/FeaturesExtractor.hpp"

void Sample::computeFeatures(std::shared_ptr<FeaturesExtractor>& extractor)
{
    cv::Mat img = cv::imread(_path, cv::IMREAD_GRAYSCALE);

    if (!img.data) {
        throw std::runtime_error("Cannot find file");
    }

    extractor->detectAndCompute(img, _descriptors);
}

cv::Mat& Sample::getDescriptors()
{
    return _descriptors;
}

int Sample::getLabelId()
{
    return _label;
}


int Sample::countDescriptors() const
{
    return _descriptors.rows;
}

std::string Sample::getName() const
{
    return _filename;
}

std::string Sample::getPath() const
{
    return _path;
}
//
// Created by pp on 10.01.19.
//

#include "../includes/KNearestClusterClassifier.hpp"

cv::Mat KNearestClusterClassifier::cluster(const cv::Mat& features)
{
    cv::kmeans(
            features,
            _clustersCount,
            _featuresClustersLabels,
            cv::TermCriteria(cv::TermCriteria::MAX_ITER + cv::TermCriteria::EPS, 300, 0.0001),
            10,
            cv::KMEANS_PP_CENTERS,
            cv::noArray()
    );

    return _featuresClustersLabels;
}

void KNearestClusterClassifier::train(const cv::Mat &features, cv::Mat &featuresClustersLabels)
{
    _classifier->train(features, cv::ml::ROW_SAMPLE, featuresClustersLabels);
    _classifier->save("dump-kn"); // TODO: REMOVE
}

cv::Mat KNearestClusterClassifier::predict(const cv::Mat& features)
{

    cv::Mat out;


    _classifier->predict(features, out);

    out.convertTo(out, CV_32S);

    return out;
}
//
// Created by pp on 12.01.19.
//
#include "../includes/Histogram.hpp"


cv::Mat Histogram::build(const Sample& sample, const cv::Mat &clusterLabels)
{
    std::vector<Sample> samples;
    samples.push_back(sample);

    return build(samples, clusterLabels);
}

cv::Mat Histogram::build(const std::vector<Sample>& samples, const cv::Mat& clusterLabels)
{
    cv::Mat histogram = cv::Mat::zeros(static_cast<int>(samples.size()), _clusters, CV_32F);

    int skip = 0;

    for (int i = 0; i < samples.size(); ++i) {
        auto sample = samples[i];

        for (int j = 0; j < sample.countDescriptors(); ++j) {
            auto idx = clusterLabels.at<int>(j + skip);

            histogram.at<float>(i, idx) += 1.0;
        }
        skip += sample.countDescriptors();
    }

    return histogram;
}
//